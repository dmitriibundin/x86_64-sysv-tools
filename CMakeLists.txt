################################################################
#      To create a symlink chain during installation see       #
#  https://cmake.org/cmake/help/latest/command/file.html#copy  #
################################################################
cmake_minimum_required(VERSION 3.10)

project(x86tools C ASM_NASM)

set(STDX_ASM_NASM_BINARY_SOURCES main.S)

set(CMAKE_ASM_NASM_LINK_EXECUTABLE "ld <FLAGS> <CMAKE_ASM_NASM_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES>")

set(STDX_ASM_NASM_SOURCES min.S src/info.S)
set(STDX_ASM_NASM_FLAGS "-f elf64 -g")
#This is to workaround necessary trailing slash in the include path.
#See https://bugzilla.nasm.us/show_bug.cgi?id=3392205
set(STDX_ASM_NASM_FLAGS "${STDX_ASM_NASM_FLAGS} -I${STDX_AUTOGENERATED_SRC_DIR}/")

#convert c headers to nasm headers
set(X86T_AUTOGENERATED_SRC_DIR_ASM_NASM_INC ${CMAKE_CURRENT_BINARY_DIR}/autogenerated_src/asm/include)
set(X86T_C_HEADERS_CONVERT_NASM ${CMAKE_CURRENT_SOURCE_DIR}/include/errors.h)

set(STDX_C_SOURCES main.c)
set(STDX_C_FLAGS "-Wno-unused-variable -Wextra -Werror -pedantic -Wstrict-prototypes -Wconversion -Wattributes -fno-stack-protector -g3 -O3")

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${STDX_C_FLAGS}")

set_source_files_properties(${STDX_ASM_NASM_SOURCES} ${STDX_ASM_NASM_BINARY_SOURCES} PROPERTIES LANGUAGE ASM_NASM)
set(CMAKE_ASM_NASM_COMPILE_OBJECT "${CMAKE_ASM_NASM_COMPILE_OBJECT} ${STDX_ASM_NASM_FLAGS}")

add_executable(bin_asm ${STDX_ASM_NASM_ERRORS_INC} ${STDX_ASM_NASM_BINARY_SOURCES})
set_target_properties(bin_asm PROPERTIES LINKER_LANGUAGE ASM_NASM)

message(${STDX_ASM_NASM_ERRORS_INC})
add_executable(bin ${STDX_C_SOURCES} ${STDX_ASM_NASM_ERRORS_INC} ${STDX_ASM_NASM_SOURCES})
set_target_properties(bin PROPERTIES LINKER_LANGUAGE C)

target_include_directories(bin PRIVATE include)
#target_include_directories(bin_asm PRIVATE include)